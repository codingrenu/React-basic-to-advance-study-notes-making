// this session iam learning 


           updating arrays in state.


craeting file List.js

using function component:

code ....



// updating arrays  in state.

import { useState } from "react";

function List() {

     const [List,setList]= useState(['test1','test2']);

    //dynamically update this code use.



    const [List,setList]= useState([]);


    const [count,setcount]= useState(1);



//updating defaultpurpose so create the function


function AddItem() {

    const itemName = 'item'+count;

    setList((previousstate) => {return[...previousstate,itemName]});

    //increment purpose

    setcount((previousstate) => {return  previousstate+1 });
}


//items view in inspect purpose so tis code is use.

    console.log('current state',List);

    return ( 

        <div>

             <h1>List</h1>

             <button onClick={AddItem}> Add Item </button>


            <ul>

              {List.map((el,index) => <li key={index} >{el}</li>)}

              {/* <li>Item name</li> */}

            </ul>
            
            
            
        </div>
    );
}


export default List;


02... index.js code is necessary.




import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

import Favoritecolor from './components/Favoritecolor';
import Car from './components/Car';
import Scooter from './components/Scooter';
import List from './components/List';



const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    
     <Favoritecolor/>
     <Car/>
     <Scooter/>
     <List/>
    
    
  </React.StrictMode>
);



// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();



output:

List
   
   . test1
   . test2



..................



after every time click the AddItembutton automatically increment purpose use this 
code 





same as List.js code 



mainly this code .





// updating arrays  in state.

import { useState } from "react";

function List() {

     
    //dynamically update this code use.



    const [List,setList]= useState([]);


    const [count,setcount]= useState(1);


//updating defaultpurpose so create the function


function AddItem() {

    const itemName = 'item'+count;

    setList((previousstate) => {return[...previousstate,itemName]});

    //increment purpose

    setcount((previousstate) => {return  previousstate+1 });
}



total code below..........







// updating arrays  in state.

import { useState } from "react";

function List() {

     const [List,setList]= useState(['test1','test2']);

    //dynamically update this code use.



    const [List,setList]= useState([]);


    const [count,setcount]= useState(1);



//updating defaultpurpose so create the function


function AddItem() {

    const itemName = 'item'+count;

    setList((previousstate) => {return[...previousstate,itemName]});

    //increment purpose

    setcount((previousstate) => {return  previousstate+1 });
}


//items view in inspect purpose so tis code is use.

    console.log('current state',List);

    return ( 

        <div>

             <h1>List</h1>

             <button onClick={AddItem}> Add Item </button>


            <ul>

              {List.map((el,index) => <li key={index} >{el}</li>)}

              {/* <li>Item name</li> */}

            </ul>
            
            
            
        </div>
    );
}


export default List;





and index.js code is necessary.





import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

import Favoritecolor from './components/Favoritecolor';
import Car from './components/Car';
import Scooter from './components/Scooter';
import List from './components/List';



const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    
     <Favoritecolor/>
     <Car/>
     <Scooter/>
     <List/>
    
    
  </React.StrictMode>
);



// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();




output:

List

   item-1
   item-2

   every time click the AddItem button automatically count work is show 
   inthis browser.




..................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX................


